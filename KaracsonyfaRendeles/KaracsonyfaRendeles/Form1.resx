<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        oi74f6Y/Cz+cihLjAAAAAElFTkSuQmCC
</value>
  </data>
</root>